package osgrid

import (
	"bytes"
	"compress/gzip"
	"encoding/base64"
	"fmt"
	"github.com/robertkrimen/otto"
	"io"
	"net/http"
)

var (
	vm = otto.New()
)

func init() {
	modules := []string{
		"https://cdn.jsdelivr.net/npm/geodesy@1/vector3d.js",
		"https://cdn.jsdelivr.net/npm/geodesy@1/dms.js",
		"https://cdn.jsdelivr.net/npm/geodesy@1/latlon-ellipsoidal.js",
		"https://cdn.jsdelivr.net/npm/geodesy@1/osgridref.js",
	}

	for _, mod := range modules {
		resp, err := http.Get(mod)
		must(err)
		_, err = vm.Run(resp.Body)
		resp.Body.Close()
		must(err)
	}
}

func OSGridToLatLon(osgrid string) (float64, float64, error) {
	vm.Set("osgrid", osgrid)
	ret, err := vm.Run(`OsGridRef.osGridToLatLon(OsGridRef.parse(osgrid), LatLon.datum.WGS84);`)
	if err != nil {
		return 0, 0, err
	}
	obj, _ := ret.Export()
	latLon := obj.(map[string]interface{})
	return latLon["lat"].(float64), latLon["lon"].(float64), nil
}

func X() {
	fmt.Println(OSGridToLatLon("TL 44982 57869"))

}

func allModules() io.Reader {
	const text = `
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
		`

	r, err := gzip.NewReader(base64.NewDecoder(base64.StdEncoding, bytes.NewReader([]byte(text))))
	must(err)
	return r
}

func must(err error) {
	if err != nil {
		panic(err)
	}
}
